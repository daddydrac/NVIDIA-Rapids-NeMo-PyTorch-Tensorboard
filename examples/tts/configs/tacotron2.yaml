model: "Tacotron 2"
sample_rate: &sr 22050
# <PAD>, <BOS>, <EOS> will be added by the tacotron2.py script
labels: &labels [' ', '!', '"', "'", '(', ')', ',', '-', '.', ':', ';', '?', 'A', 'B',
         'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
         'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', ']', 'a', 'b',
         'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
         'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
n_fft: &n_fft 1024
n_mels: &n_mels 80
fmax: &fmax 8000
n_stride: &n_window_stride 256
pad_value: &pad_value -11.52

AudioToTextDataLayer_train:
    header: {collection_type: asr, collection_version: null,
        full_spec: nemo.collections.asr.data_layer.AudioToTextDataLayer, nemo_core_version: 0.9.5}
    init_params:
        drop_last: false
        int_values: false
        labels: *labels
        load_audio: true
        max_duration: null
        min_duration: 0.1
        normalize_transcripts: false
        sample_rate: *sr
        trim_silence: false
        shuffle: true
        # batch_size: 48  # Overwritten in tacotron2.py
        # num_workers: 20
        # manifest_filepath: ljspeech_train.json
        # bos_id: 66
        # eos_id: 67
        # pad_id: 68

AudioToTextDataLayer_eval:
    header: {collection_type: asr, collection_version: null,
        full_spec: nemo.collections.asr.data_layer.AudioToTextDataLayer, nemo_core_version: 0.9.5}
    init_params:
        drop_last: false
        int_values: false
        labels: *labels
        load_audio: true
        max_duration: null
        min_duration: 0.1
        normalize_transcripts: false
        sample_rate: *sr
        trim_silence: false
        shuffle: false
        # batch_size: 48  # Overwritten in tacotron2.py
        # num_workers: 20
        # manifest_filepath: ljspeech_eval.json
        # bos_id: 66
        # eos_id: 67
        # pad_id: 68

AudioToMelSpectrogramPreprocessor:
    header: {full_spec: nemo.collections.asr.audio_preprocessing.AudioToMelSpectrogramPreprocessor,
        collection_type: asr, collection_version: null, nemo_core_version: 0.9.5}
    init_params:
        dither: 0.0
        features: *n_mels
        frame_splicing: 1
        highfreq: *fmax
        log: true
        log_zero_guard_type: clamp
        log_zero_guard_value: 1e-05
        lowfreq: 0
        mag_power: 1.0
        n_fft: *n_fft
        n_window_size: 1024
        n_window_stride: *n_window_stride
        normalize: null
        pad_to: 16
        pad_value: *pad_value
        preemph: null
        sample_rate: *sr
        stft_conv: true
        window: hann
        window_size: null
        window_stride: null

Tacotron2Encoder:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.Tacotron2Encoder,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params:
        encoder_kernel_size: 5
        encoder_n_convolutions: 3
        encoder_embedding_dim: &enc_emb_dim 512

TextEmbedding:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.TextEmbedding,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params:
        symbols_embedding_dim: *enc_emb_dim
        # n_symbols: 69  # Overwritten in tacotron2.py

Tacotron2Decoder:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.Tacotron2Decoder,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params: &decoder_params
        decoder_rnn_dim: 1024
        encoder_embedding_dim: *enc_emb_dim
        gate_threshold: 0.5
        max_decoder_steps: 1000
        n_frames_per_step: 1  # currently only 1 is supported
        n_mel_channels: *n_mels
        p_attention_dropout: 0.1
        p_decoder_dropout: 0.1
        prenet_dim: 256
        prenet_p_dropout: 0.5
        # Attention parameters
        attention_dim: 128
        attention_rnn_dim: 1024
        # AttentionLocation Layer parameters
        attention_location_kernel_size: 31
        attention_location_n_filters: 32

Tacotron2DecoderInfer:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.Tacotron2DecoderInfer,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params: *decoder_params

Tacotron2Postnet:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.Tacotron2Postnet,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params:
        n_mel_channels: *n_mels
        p_dropout: 0.5
        postnet_embedding_dim: 512
        postnet_kernel_size: 5
        postnet_n_convolutions: 5

Tacotron2Loss:
    header: {full_spec: nemo.collections.tts.tacotron2_modules.Tacotron2Loss,
        collection_type: tts, collection_version: null, nemo_core_version: 0.9.5}
    init_params:
        pad_value: *pad_value
